<title>Yari (c) <%= __year %> Polaryx</title>
<link rel="icon" href="resources/favicon.ico">
<link rel="stylesheet" href="global/uikit.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script src="global/uikit.min.js"></script>
<script src="global/uikit-icons.min.js"></script>
<style>
    html, body {
        margin: 0;
        padding: 0;
    }
    html {
        background-color: #242424;
    }
</style>
<script>
    const apiUrl = "<%= __apiUrl %>";
    const api = axios.create({
        baseURL: apiUrl,
        withCredentials: true,
        headers: {
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',
        }
    });
    const domain = "<%= __domain %>";
</script>
<script>
    function notifyError(msg) {
        Swal.fire({
            title: "Error!",
            text: msg,
            icon: "error"
        });
    }
    function notifySucccess(msg) {
        Swal.fire({
            title: "Success!",
            text: msg,
            icon: "success"
        });
    }
    function notifyConfirm(msg, cb) {
        Swal.fire({
            title: 'Are you sure?',
            text: msg,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, I am!',
            cancelButtonText: 'No, I am not!'
        }).then((result) => {
            cb(result.isConfirmed);
        });
    }
    function getInputWithCheck(msg, checker, cb) {
        Swal.fire({
            title: "Input required!",
            inputLabel: "Enter " + msg + ":",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Submit',
            cancelButtonText: 'Cancel',
            input: 'text'
        }).then(result => {
            if (result.value) {
                if (checker(result.value)) {
                    cb(result.value);
                } else {
                    notifyError("Invalid Input!");
                }
            }
        });
    }
    function getInput(msg, cb) {
        getInputWithCheck(msg, () => true, cb);
    }
    function notifyInputConfirm(msg, neededText, cb) {
        Swal.fire({
            title: msg,
            inputLabel: "Enter \"" + neededText + "\" for Confirmation:",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, I am!',
            cancelButtonText: 'No, I am not!',
            input: 'text'
        }).then(result => {
            if (result.value) {
                cb(result.value === neededText);
            }
        });
    }
</script>
